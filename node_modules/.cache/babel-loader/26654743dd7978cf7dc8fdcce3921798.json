{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smsantacruz\\\\Desktop\\\\to-do-list\\\\src\\\\App.jsx\";\nimport React, { useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { generate as id } from 'shortid';\nimport allColors from './styles/colors';\nimport FormTask from './components/FormTask';\nimport Task from './components/Task';\nconst GlobalStyle = createGlobalStyle`\n    body{\n        font-family:sans-serif;\n        background-color: #222;\n        color:${allColors.mainColor};\n        text-align: center;\n        margin:0;\n    }\n`;\n\nconst App = () => {\n  const [colorSelected, setColorSelected] = useState(allColors.colors[0]);\n  const [tasks, setTasks] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (e.target.title.value.trim() !== '') {\n      createNewTask(e.target.title.value);\n      e.target.title.value = '';\n    }\n  };\n\n  const createNewTask = title => {\n    const newTask = {\n      id: id(),\n      title,\n      color: colorSelected,\n      done: false\n    };\n    const allTasks = [...tasks, newTask];\n    setTasks(allTasks);\n  };\n\n  const handleCompleteTask = id => {\n    const currentTasks = [...tasks];\n    const task = currentTasks.find(task => task.id === id);\n    const index = currentTasks.indexOf(task);\n    currentTasks[index].done = !currentTasks[index].done;\n    setTasks(currentTasks);\n  };\n\n  const handleDeleteTask = id => {\n    let currentTasks = [...tasks];\n    currentTasks = currentTasks.filter(task => task.id !== id);\n    setTasks(currentTasks);\n  };\n\n  const handleChangeColor = color => {\n    setColorSelected(color);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"To-do-list Challenge!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"From: Sergio Santa Cruz\"), /*#__PURE__*/React.createElement(FormTask, {\n    handleChangeColor: handleChangeColor,\n    handleSubmit: handleSubmit,\n    colorSelected: colorSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), tasks.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 36\n    }\n  }, \"You dont have any task!\"), tasks.map(task => /*#__PURE__*/React.createElement(Task, {\n    key: id(),\n    done: task.done,\n    title: task.title,\n    color: task.color,\n    handleCompleteTask: () => handleCompleteTask(task.id),\n    handleDeleteTask: () => handleDeleteTask(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/smsantacruz/Desktop/to-do-list/src/App.jsx"],"names":["React","useState","createGlobalStyle","generate","id","allColors","FormTask","Task","GlobalStyle","mainColor","App","colorSelected","setColorSelected","colors","tasks","setTasks","handleSubmit","e","preventDefault","target","title","value","trim","createNewTask","newTask","color","done","allTasks","handleCompleteTask","currentTasks","task","find","index","indexOf","handleDeleteTask","filter","handleChangeColor","length","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { createGlobalStyle } from 'styled-components'\r\n\r\nimport { generate as id } from 'shortid'\r\nimport allColors from './styles/colors'\r\nimport FormTask from './components/FormTask'\r\nimport Task from './components/Task'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    body{\r\n        font-family:sans-serif;\r\n        background-color: #222;\r\n        color:${allColors.mainColor};\r\n        text-align: center;\r\n        margin:0;\r\n    }\r\n`\r\n\r\nconst App = () => {\r\n\r\n    const [colorSelected, setColorSelected] = useState(allColors.colors[0])\r\n    const [tasks, setTasks] = useState([])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (e.target.title.value.trim() !== '') {\r\n            createNewTask(e.target.title.value)\r\n            e.target.title.value = ''\r\n        }\r\n    }\r\n\r\n    const createNewTask = (title) => {\r\n        const newTask = {\r\n            id: id(),\r\n            title,\r\n            color: colorSelected,\r\n            done: false\r\n        }\r\n\r\n        const allTasks = [...tasks, newTask]\r\n\r\n        setTasks(allTasks)\r\n    }\r\n\r\n    const handleCompleteTask = (id) => {\r\n        const currentTasks = [...tasks]\r\n        const task = currentTasks.find(task => task.id === id)\r\n        const index = currentTasks.indexOf(task)\r\n\r\n        currentTasks[index].done = !currentTasks[index].done\r\n\r\n        setTasks(currentTasks)\r\n    }\r\n\r\n    const handleDeleteTask = (id) => {\r\n        let currentTasks = [...tasks]\r\n        currentTasks = currentTasks.filter(task => task.id !== id)\r\n\r\n        setTasks(currentTasks)\r\n    }\r\n\r\n    const handleChangeColor = (color) => {\r\n        setColorSelected(color)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <GlobalStyle />\r\n            <h1>To-do-list Challenge!</h1>\r\n            <p>From: Sergio Santa Cruz</p>\r\n            <FormTask\r\n                handleChangeColor={handleChangeColor}\r\n                handleSubmit={handleSubmit}\r\n                colorSelected={colorSelected}\r\n            />\r\n\r\n            {tasks.length === 0 && <p>You dont have any task!</p>}\r\n            {\r\n                tasks.map(task => (\r\n                    <Task\r\n                        key={id()}\r\n                        done={task.done}\r\n                        title={task.title}\r\n                        color={task.color}\r\n                        handleCompleteTask={() => handleCompleteTask(task.id)}\r\n                        handleDeleteTask={() => handleDeleteTask(task.id)}\r\n                    />\r\n                ))\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}