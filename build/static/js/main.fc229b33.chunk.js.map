{"version":3,"sources":["styles/colors.js","components/ColorBox.jsx","components/FormTask.jsx","components/Task.jsx","App.jsx","index.js"],"names":["allColors","mainColor","colors","LabelColor","styled","label","color","InputRadio","input","ColorBox","handleChangeColor","isChecked","defaultChecked","id","name","onChange","type","htmlFor","Input","Button","button","ColorsContainer","div","FormTask","handleSubmit","colorSelected","onSubmit","map","key","TaskContainer","TaskButton","TaskText","p","done","Task","title","handleCompleteTask","handleDeleteTask","onClick","GlobalStyle","createGlobalStyle","App","useState","setColorSelected","tasks","setTasks","createNewTask","newTask","allTasks","e","preventDefault","target","value","trim","length","task","currentTasks","find","index","indexOf","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc229b33.chunk.js","sourcesContent":["const allColors = {\r\n    mainColor: '#387EF5',\r\n    colors: [\r\n        '#5D576B',\r\n        '#33C4FF',\r\n        '#FF3333',\r\n        '#DA33FF'\r\n    ]\r\n}\r\n\r\nexport default allColors","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst LabelColor = styled.label`\r\n    display:inline-block;\r\n    width:30px;\r\n    height:30px;\r\n    margin-top:.5rem;\r\n    background-color: ${({ color }) => color};\r\n    border-radius:5px;\r\n`\r\n\r\nconst InputRadio = styled.input`\r\n    display:none;\r\n    &:checked + label{\r\n        border:1px solid #fff;\r\n    }\r\n`\r\n\r\n\r\nconst ColorBox = ({ color, handleChangeColor, isChecked }) => (\r\n    <>\r\n        <InputRadio\r\n            defaultChecked={isChecked}\r\n            id={color}\r\n            name=\"color\"\r\n            onChange={() => handleChangeColor(color)}\r\n            type=\"radio\"\r\n        />\r\n        <LabelColor htmlFor={color} color={color}></LabelColor>\r\n    </>\r\n)\r\n\r\nexport default ColorBox","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport allColors from '../styles/colors'\r\nimport ColorBox from './ColorBox';\r\nimport { generate as id } from 'shortid'\r\n\r\nconst Input = styled.input`\r\n    border:none;\r\n    border-bottom: 1px solid ${allColors.mainColor};\r\n    background: none;\r\n    outline:none;\r\n    color: ${allColors.mainColor};\r\n`\r\n\r\nconst Button = styled.button`\r\n    background-color: transparent;\r\n    border:1px solid ${allColors.mainColor};\r\n    border-radius:5px;\r\n    color: ${allColors.mainColor};\r\n    padding: .3rem .5rem;\r\n    cursor:pointer;\r\n    outline:none;\r\n\r\n    &:hover{\r\n        background-color:${allColors.mainColor};\r\n        color:#222;\r\n    }\r\n`\r\n\r\nconst ColorsContainer = styled.div`\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    width:150px;\r\n    margin: 0 auto .5rem;\r\n`\r\n\r\nconst FormTask = ({ handleChangeColor, handleSubmit, colorSelected }) => (\r\n    <form onSubmit={handleSubmit}>\r\n        <Input name=\"title\" type=\"text\" />\r\n        <ColorsContainer>\r\n            {\r\n                allColors.colors.map(color => (\r\n                    <ColorBox\r\n                        handleChangeColor={handleChangeColor}\r\n                        color={color}\r\n                        key={id()}\r\n                        isChecked={colorSelected === color}\r\n                    />\r\n                ))\r\n            }\r\n        </ColorsContainer>\r\n        <Button>Add a new task</Button>\r\n    </form>\r\n\r\n)\r\n\r\nexport default FormTask\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst TaskContainer = styled.div`\r\n    display:grid;\r\n    grid-template-columns: 30px 1fr 50px;\r\n    justify-items:start;\r\n    align-items:center;\r\n    padding: 0 1rem;\r\n    background-color:${({ color }) => color};\r\n    width:100%;\r\n    max-width:250px;\r\n    margin: 1rem auto;\r\n    border-radius:5px;\r\n`\r\n\r\nconst TaskButton = styled.button`\r\n    font-size:.8rem;\r\n    background-color:transparent;\r\n    border: 1px solid #fff;\r\n    color:#fff;\r\n    padding:.3rem .5rem;\r\n    border-radius:10px;\r\n    cursor:pointer;\r\n    outline:none;\r\n\r\n    &:hover{\r\n        background-color:#fff;\r\n        color:#222;\r\n    }\r\n`\r\n\r\nconst TaskText = styled.p`\r\n    color:#fff;\r\n    text-decoration:${({ done }) => done ? 'line-through' : 'none'};\r\n`\r\n\r\nconst Task = ({ color, title, done, handleCompleteTask, handleDeleteTask }) => (\r\n    <TaskContainer color={color}>\r\n        <input\r\n            type=\"checkbox\"\r\n            onChange={handleCompleteTask}\r\n            defaultChecked={done}\r\n        />\r\n        <TaskText done={done}>{title}</TaskText>\r\n        <TaskButton onClick={handleDeleteTask}>Delete</TaskButton>\r\n    </TaskContainer>\r\n)\r\n\r\nexport default Task","import React, { useState } from 'react'\r\nimport { createGlobalStyle } from 'styled-components'\r\n\r\nimport { generate as id } from 'shortid'\r\nimport allColors from './styles/colors'\r\nimport FormTask from './components/FormTask'\r\nimport Task from './components/Task'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    body{\r\n        font-family:sans-serif;\r\n        background-color: #222;\r\n        color:${allColors.mainColor};\r\n        text-align: center;\r\n        margin:0;\r\n    }\r\n`\r\n\r\nconst App = () => {\r\n\r\n    const [colorSelected, setColorSelected] = useState(allColors.colors[0])\r\n    const [tasks, setTasks] = useState([])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (e.target.title.value.trim() !== '') {\r\n            createNewTask(e.target.title.value)\r\n            e.target.title.value = ''\r\n        }\r\n    }\r\n\r\n    const createNewTask = (title) => {\r\n        const newTask = {\r\n            id: id(),\r\n            title,\r\n            color: colorSelected,\r\n            done: false\r\n        }\r\n\r\n        const allTasks = [...tasks, newTask]\r\n\r\n        setTasks(allTasks)\r\n    }\r\n\r\n    const handleCompleteTask = (id) => {\r\n        const currentTasks = [...tasks]\r\n        const task = currentTasks.find(task => task.id === id)\r\n        const index = currentTasks.indexOf(task)\r\n\r\n        currentTasks[index].done = !currentTasks[index].done\r\n\r\n        setTasks(currentTasks)\r\n    }\r\n\r\n    const handleDeleteTask = (id) => {\r\n        let currentTasks = [...tasks]\r\n        currentTasks = currentTasks.filter(task => task.id !== id)\r\n\r\n        setTasks(currentTasks)\r\n    }\r\n\r\n    const handleChangeColor = (color) => {\r\n        setColorSelected(color)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <GlobalStyle />\r\n            <h1>To-do-list Challenge!</h1>\r\n            <h3>From: Sergio Santa Cruz</h3>\r\n            <FormTask\r\n                handleChangeColor={handleChangeColor}\r\n                handleSubmit={handleSubmit}\r\n                colorSelected={colorSelected}\r\n            />\r\n\r\n            {tasks.length === 0 && <p>You dont have any task!</p>}\r\n            {\r\n                tasks.map(task => (\r\n                    <Task\r\n                        key={id()}\r\n                        done={task.done}\r\n                        title={task.title}\r\n                        color={task.color}\r\n                        handleCompleteTask={() => handleCompleteTask(task.id)}\r\n                        handleDeleteTask={() => handleDeleteTask(task.id)}\r\n                    />\r\n                ))\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}